<?php
/**
 * 用户充值记录
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018-06-28
 * Time: 10:58
 */

namespace app\common\model;


use think\Log;
use think\Model;

class ChargeOrder extends Model
{
    protected $autoWriteTimestamp = true;

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 充值支付成功
     */
    public function payOkOrder($orderInfo, $pay_type)
    {
//        $order_no = \model('pay_order')->where('id', $orderInfo['order_no'])->value('order_no');
        $order_no = $orderInfo['order_no'];
        $order = $this->where('order_no', $order_no)->find();
        if(!$order){
            return false;
        }else{
            $this->save(['pay_status'=>1, 'pay_type'=>$pay_type, 'order_status'=>1, 'pay_time'=>date('Y-m-d H:i:s')], ['order_no'=>$order_no]);
            $user = \model('user')->where('id', $order['user_id'])->find();
            $user->setInc('cost', $order['money']+$order['given_money']);
//            model('user')->where('id', $order['user_id'])->setInc('cost', $order['money']+$order['given_money']);
            $sixun = new SixunOpera();
            $userInfo = $sixun->getCardInfo($user['card_id']);
            $base_money = $userInfo['cost'];
            $money = round($base_money+$order['money']+$order['given_money'], 2);
            $sixun->set_residual_amt($money, $user['card_id']);
            //添加金额变动记录
            $moneyLog = new MoneyLog();
            $moneyLog->writeLog($order['user_id'], $order['money'], config('pay_type')[$order['pay_type']], '会员充值，赠送金额'.$order['given_money'].'元', $order['order_no']);
            MoneyLogMonth::addLog($order['user_id'], date('Y-m'), $order['money']+$order['given_money'], 'add');
        }
    }


}