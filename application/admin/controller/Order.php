<?php
/**
 * 平台订单
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2018-07-07
 * Time: 15:21
 */

namespace app\admin\controller;


class Order extends BaseController
{
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 全部订单
     */
    public function orderList()
    {
        $this->assign('is_admin', 1);
        if (request()->isPost()) {
            $order = model('order');
            $where = [];
            if (input('searchKey') && input('searchValue')) {
                $where[input('searchKey')] = input('searchValue');
            }

            if (input('order_status') !== "") {
                $where['a.order_status'] = input('order_status');
            }
            if (input('start_time')) {
                $where['a.create_time'] = ['egt', strtotime(input('start_time'))];
            }
            if (input('end_time')) {
                $where['a.create_time'] = ['elt', strtotime(input('end_time') . '+1 day')];
            }
            if (input('start_time') && input('end_time')) {
                $where['a.create_time'] = [
                    ['egt', strtotime(input('start_time'))],
                    ['elt', strtotime(input('end_time') . '+1 day')]
                ];
            }
            $order_list = $order->alias('a')->join('user b', 'a.user_id=b.id')->field('a.*, b.user_name, b.telephone')->where($where)->select();
            $this->assign('list', $order_list);
            return $this->fetch('orderList');
        }
        $this->assign('list', []);
        return $this->fetch();
    }

    /**
     * 销售客服订单
     */
    public function salerOrderList()
    {
        $vip_code = model('Admins')->where('id', session(config('adminKey')))->value('vip_code');
        $user_ids = model('User')->where('vip_code', $vip_code)->column('id');
        $where = ['a.user_id'=>['in', $user_ids]];
        if (input('searchKey') && input('searchValue')) {
            $where[input('searchKey')] = input('searchValue');
        }
        if (input('order_status') !== "") {
            $where['a.order_status'] = input('order_status');
        }
        if (input('start_time')) {
            $where['a.create_time'] = ['egt', strtotime(input('start_time'))];
        }
        if (input('end_time')) {
            $where['a.create_time'] = ['elt', strtotime(input('end_time') . '+1 day')];
        }
        if (input('start_time') && input('end_time')) {
            $where['a.create_time'] = [
                ['egt', strtotime(input('start_time'))],
                ['elt', strtotime(input('end_time') . '+1 day')]
            ];
        }
        $orderList = model('Order')->alias('a')->join('user b', 'a.user_id=b.id')->field('a.*, b.user_name, b.telephone')->where($where)->select();
        $this->assign('list', $orderList);
        $this->assign('is_show', 1);
        return $this->fetch('orderList');
    }

    /**
     * 订单配送，订单详情
     */
    public function orderSend()
    {
        $order_det = model('OrderDet')->where('order_no', input('order_no'))->select();
        $this->assign('list', $order_det);
        $this->assign('order_no', input('order_no'));
        return $this->fetch();
    }

    /**
     * 确认订单发货
     */
    public function sureSend()
    {
        $order_no = input('order_no');
        $order = model('Order')->where('order_no', $order_no)->find();
        if ($order) {
            if ($order['order_status'] == 1) {
                $res = $order->save(['order_status' => 2, 'send_time' => date('Y-m-d H:i'), 'is_send' => 1]);
                if ($res) {
                    exit_json();
                } else {
                    exit_json(-1, '操作失败');
                }
            } else {
                exit_json(-1, '订单状态异常');
            }
        } else {
            exit_json(-1, '订单不存在');
        }
    }

    /**
     * 订单详情
     */
    public function order_detail()
    {
        $order_id = input('order_id');
        $order = model('order');
        $item = $order->alias('a')->join('user b', 'a.user_id=b.id')->field('a.*, b.user_name, b.telephone')->where('a.id', $order_id)->find();
        $order_det = model('order_det');
        $good_list = $order_det->where('order_no', $item['order_no'])->select();
        $this->assign('item', $item);
        $this->assign('good_list', $good_list);
        return $this->fetch();
    }

    /**
     * 运费调整
     */
    public function sendFeeChange()
    {
        $order_id = input('order_id');
        $order = model('Order')->where('id', $order_id)->find();
        if ($order) {
            if (request()->isAjax()) {
                if($order['order_status'] != 0){
                    exit_json(-1, '订单状态错误');
                }
                $send_fee = input('send_fee');
                $res = $order->save([
                    'send_fee'=>$send_fee,
                    'order_money'=>$order['total_money']+$send_fee
                ]);
                if($res){
                    exit_json();
                }else{
                    exit_json(-1, '修改失败');
                }
            } else {
                $this->assign('order', $order);
                return $this->fetch();
            }
        } else {
            exit_json(-1, '订单不存在');
        }
    }

    /**
     * 订单退款
     */
    public function orderRefund()
    {
        $order_no = input('order_no');
        $order_refund = model('OrderRefund')->where('order_no', $order_no)->find();
        $list = model('OrderDet')->whereIn('id', $order_refund['refund_detail'])->select();
        $this->assign('order_refund', $order_refund);
        $this->assign('list', $list);
        return $this->fetch();
    }


    //TODO 待处理



    /**
     * 下载订单
     */
    public function downloadOrder()
    {
        if (request()->isPost()) {
            $start_time = input('start_time');
            $end_time = input('end_time');
            $where['a.create_time'] = [
                ['egt', strtotime($start_time)],
                ['elt', strtotime($end_time . "+1 day")]
            ];
            $where['a.pay_status'] = 1;
            $order_list = model('order')->alias('a')->join('order_refund b', 'a.id=b.order_id', 'left')->field('a.*, b.money refund_money, b.create_time refund_time, b.status refund_status')->where($where)->select();
            $this->assign('list', $order_list);
            $this->assign('filename', date('Y-m-d') . '.xls');
            $android_num = model('user')->where([
                'creattime' => [
                    ['egt', strtotime($start_time)],
                    ['elt', strtotime($end_time . "+1 day")]
                ],
                'device' => 'Android'
            ])->count();
            $iphone_num = model('user')->where([
                'creattime' => [
                    ['egt', strtotime($start_time)],
                    ['elt', strtotime($end_time . "+1 day")]
                ],
                'device' => 'iPhone'
            ])->count();
            $active_num = model('order')->where([
                'create_time' => [
                    ['egt', strtotime($start_time)],
                    ['elt', strtotime($end_time . "+1 day")]
                ]
            ])->group('user_id')->count();
            $reg_data = [
                'android' => $android_num,
                'iphone' => $iphone_num,
                'active_num' => $active_num
            ];
            $this->assign('reg_data', $reg_data);
            $shop_list = model('shop')->column('id', 'shopname');
            $amount = [];
            foreach ($shop_list as $k => $v) {
                $amount["$k"] = model('order')->where([
                    'pay_status' => 1,
                    'is_apply_refund' => ['in', [0, 1, 3]],
                    'shop_id' => $v,
                    'create_time' => [
                        ['egt', strtotime($start_time)],
                        ['elt', strtotime($end_time . "+1 day")]
                    ]
                ])->sum('real_cost');
            }
            $this->assign('amount', $amount);
            return $this->fetch('excel');
        }
        return $this->fetch();
    }


}